name: "Build and Deploy iOS App"
description: "Deploys iOS App to App Store."

inputs:
  provisioning-profile:
    description: "Provision File"
    required: true
  provisioning-profile-widgetkit:
    description: "Provision File for WidgetKit"
    required: true
  certificate-p12-base64:
    description: "Certificate file P12"
    required: true
  certificate-password:
    description: "Certificate password"
    required: true
  app-store-private-key-p8:
    description: "App Store Private Key P8"
    required: true
  app-store-private-key-id:
    description: "App Store Private Key ID"
    required: true
  app-store-api-issuer:
    description: "App Store API key issuer"
    required: true
  dotenv:
    description: "dotenv"
    required: true
  google-service-info-plist-base64:
    description: "GoogleService-Info.plist base64"
    required: true
  run-number:
    description: "Run-Number"
    required: true

runs:
  using: composite
  steps:
    - name: Flutter Pub Get
      shell: bash
      run: flutter pub get

    - name: Import Apple Provisioning Profiles
      shell: bash
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo -n ${{ inputs.provisioning-profile }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/Submon_distribution.mobileprovision
        echo -n ${{ inputs.provisioning-profile-widgetkit }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/Submon_WidgetKit_Production.mobileprovision

    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ inputs.certificate-p12-base64 }}
        p12-password: ${{ inputs.certificate-password }}

    - name: Import App Store Connect API Key
      shell: bash
      run: |
        mkdir ~/private_keys
        echo -n "${{ inputs.app-store-private-key-p8 }}" > ~/private_keys/AuthKey_${{ inputs.app-store-private-key-id }}.p8

    - name: Import .env
      shell: bash
      run: echo -n "${{ inputs.dotenv }}" > .env

    - name: Import GoogleService-Info.plist
      shell: bash
      run: echo -n "${{ inputs.google-service-info-plist-base64 }}" | base64 -d > ios/GoogleService-Info-release.plist

    - name: Build IPA for App Store
      shell: bash
      run: flutter build ipa --build-number $((${{ inputs.run-number  }}+58)) --export-options-plist ios/exportOptions.plist

    - name: Deploy to App Store
      shell: bash
      run: xcrun altool --upload-app --type ios -f "./build/ios/ipa/Submon.ipa" --apiKey ${{ inputs.app-store-private-key-id }} --apiIssuer ${{ inputs.app-store-api-issuer }}