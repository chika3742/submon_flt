name: Deploy to Internal Track

concurrency:
  group: deploy-internal
  cancel-in-progress: true

on:
  push:
    branches:
      - dev
  workflow_dispatch:
  repository_dispatch:

jobs:
  get-changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      android: ${{
        steps.android-changed-files.outputs.only_changed == 'false' &&
        steps.ios-changed-files.outputs.only_changed == 'false' ||
        steps.android-changed-files.outputs.any_changed == 'true'
        }}
      ios: ${{
        steps.android-changed-files.outputs.only_changed == 'false' &&
        steps.ios-changed-files.outputs.only_changed == 'false' ||
        steps.ios-changed-files.outputs.any_changed == 'true'
        }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Android Changed Files
        id: android-changed-files
        uses: tj-actions/changed-files@v32
        with:
          files: |
            android/**

      - name: Get iOS Changed Files
        id: ios-changed-files
        uses: tj-actions/changed-files@v31
        with:
          files: |
            ios/**

  build-android:
    name: Build for Android
    needs:
      - get-changed-files
    if: ${{ needs.get-changed-files.outputs.android == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-gradle-${{ hashFiles("**/build.gradle", "*.gradle") }}
          path: ~/.gradle
          restore-keys: ${{ runner.os }}-gradle-

      - name: Init Flutter CLI
        uses: ./.github/actions/init-flutter-cli

      - run: flutter pub get

      - name: Import Keystore
        run: |
          echo -n '
          ${{ secrets.ANDROID_LOCAL_PROPERTIES }}' >> android/local.properties
          echo -n "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/app/release.jks

      - name: Import .env
        run: echo -n "${{ secrets.DOTENV }}" > .env

      - name: Import google-services.json
        run: |
          mkdir -p android/app/src/release
          echo -n ${{ secrets.ANDROID_GOOGLE_SERVICES_JSON_BASE64 }} | base64 -d > android/app/src/release/google-services.json

      - name: Build App Bundle for Android
        run: |
          build_num=$((${{ github.run_number }}+105))
          flutter build appbundle --build-number $build_num

      - name: Generate Native Debug Symbols
        run: zip -r native_debug_symbols.zip ./build/app/intermediates/merged_native_libs/release/out/lib/* -x "*x86/*"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-aab
          path: |
            build/app/outputs/bundle/release/app-release.aab
            native_debug_symbols.zip
            build/app/outputs/mapping/release/mapping.txt

  build-ios:
    name: Build for iOS
    needs:
      - get-changed-files
    if: ${{ needs.get-changed-files.outputs.ios == 'true' }}
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pods-${{ hashFiles("**/Podfile.lock") }}
          path: ./ios/Pods
          restore-keys: ${{ runner.os }}-pods-

      - name: Init Flutter CLI
        uses: ./.github/actions/init-flutter-cli

      - run: flutter pub get

      - name: Import Apple Provisioning Profiles
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n ${{ secrets.PROVISIONING_PROFILE }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/Submon_distribution.mobileprovision
          echo -n ${{ secrets.PROVISIONING_PROFILE_WIDGETKIT }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/Submon_WidgetKit_Production.mobileprovision

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATES_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}

      - name: Import .env
        run: echo -n "${{ secrets.DOTENV }}" > .env

      - name: Import GoogleService-Info.plist
        run: echo -n "${{ secrets.APPLE_GOOGLE_SERVICE_INFO_RELEASE_PLIST_BASE64 }}" | base64 -d > ios/GoogleService-Info-release.plist

      - run: pod install --repo-update
        working-directory: ios

      - name: Build IPA for App Store
        run: flutter build ipa --build-number $((${{ github.run_number  }}+105)) --export-options-plist ios/exportOptions.plist

      - name: Compress IPA
        run: zip submon.zip ./build/ios/ipa/Submon.ipa

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: apple-ipa
          path: submon.zip

  deploy-android:
    name: Deploy to Google Play
    needs:
      - build-android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-aab

      - run: ls

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: android-aab

  deploy-ios:
    name: Deploy to App Store
    needs:
      - build-ios
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: apple-ipa

      - name: Extract Artifacts
        run: unzip submon.zip

      - run: ls